name: Build & Release Expo Android APK

on:
  push:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: üèó Setup repo
        uses: actions/checkout@v3

      - name: üèó Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: üèó Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: üì¶ Install dependencies
        run: yarn install

      - name: üöÄ Start Expo build
        id: eas-build
        run: |
          eas build --platform android --profile release-apk --non-interactive --json > build-info.json

      - name: ‚è≥ Wait for build to finish
        id: wait-build
        run: |
          BUILD_ID=$(jq -r '.id' build-info.json)
          echo "Build ID: $BUILD_ID"

          while true; do
            STATUS=$(eas build:status --non-interactive --json --id $BUILD_ID | jq -r '.status')
            echo "Current status: $STATUS"
            if [[ "$STATUS" == "finished" ]]; then
              echo "Build completed."
              break
            elif [[ "$STATUS" == "errored" ]]; then
              echo "‚ùå Build failed."
              exit 1
            fi
            sleep 15
          done

      - name: üì• Download APK
        id: download-apk
        run: |
          BUILD_URL=$(eas build:status --non-interactive --json --id $(jq -r '.id' build-info.json) | jq -r '.artifacts.buildUrl')
          echo "APK URL: $BUILD_URL"
          curl -L "$BUILD_URL" -o app-release.apk

      - name: üèÅ Create GitHub Release and upload APK
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.run_number }}
          name: "Release v${{ github.run_number }}"
          body: "Automated release from EAS build."
          files: app-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}